package day23;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

import static org.assertj.core.api.AssertionsForClassTypes.assertThat;

class GameTest {
    private Game cut;

    @BeforeEach
    void setUp() {

    }

    @Test
    void game_play1Round_result() {
        var input = """
                ..............
                ..............
                .......#......
                .....###.#....
                ...#...#.#....
                ....#...##....
                ...#.###......
                ...##.#.##....
                ....#..#......
                ..............
                ..............
                ..............
                                """;
        cut = new Game(input);
        GameMapParser gameMapParser = new GameMapParser();
        assertThat(cut.playRound(1)).isEqualTo(gameMapParser.parse("""
                ..............
                .......#......
                .....#...#....
                ...#..#.#.....
                .......#..#...
                ....#.#.##....
                ..#..#.#......
                ..#.#.#.##....
                ..............
                ....#..#......
                ..............
                .............."""));
    }

    @Test
    void game_play2Round_result() {
        var input = """
                ..............
                ..............
                .......#......
                .....###.#....
                ...#...#.#....
                ....#...##....
                ...#.###......
                ...##.#.##....
                ....#..#......
                ..............
                ..............
                ..............
                                """;
        cut = new Game(input);
        GameMapParser gameMapParser = new GameMapParser();
        assertThat(cut.playRound(2)).isEqualTo(gameMapParser.parse("""
                ..............
                .......#......
                ....#.....#...
                ...#..#.#.....
                .......#...#..
                ...#..#.#.....
                .#...#.#.#....
                ..............
                ..#.#.#.##....
                ....#..#......
                ..............
                .............."""));
    }

    @Test
    void game_play3Round_result() {
        var input = """
                ..............
                ..............
                .......#......
                .....###.#....
                ...#...#.#....
                ....#...##....
                ...#.###......
                ...##.#.##....
                ....#..#......
                ..............
                ..............
                ..............
                                """;
        cut = new Game(input);
        GameMapParser gameMapParser = new GameMapParser();
        assertThat(cut.playRound(3)).isEqualTo(gameMapParser.parse("""
                ..............
                .......#......
                .....#....#...
                ..#..#...#....
                .......#...#..
                ...#..#.#.....
                .#..#.....#...
                .......##.....
                ..##.#....#...
                ...#..........
                .......#......
                .............."""));
    }

    @Test
    void game_play10Round_result() {
        var input = """
                ..............
                ..............
                .......#......
                .....###.#....
                ...#...#.#....
                ....#...##....
                ...#.###......
                ...##.#.##....
                ....#..#......
                ..............
                ..............
                ..............
                                """;
        cut = new Game(input);
        GameMapParser gameMapParser = new GameMapParser();
        GameMap actual = cut.playRound(10);
        assertThat(actual).isEqualTo(gameMapParser.parse("""
                .......#......
                ...........#..
                ..#.#..#......
                ......#.......
                ...#.....#..#.
                .#......##....
                .....##.......
                ..#........#..
                ....#.#..#....
                ..............
                ....#..#..#...
                .............."""));
        System.out.println(actual.drawFilled());
        assertThat(actual.calcEmptyInRectangle()).isEqualTo(110);
    }

    @Test
    void actualgame_play10Round_result() {
        var input = """
                ###.###..#.....#..#.##..##.#...###.#####..#.##.#####.###..######.#.#.#
                ....##.#.#.#......#.###..##..###...#.#...####.##...#.#....#.##.##....#
                #..#.#.#.##.........#####....#..##.......#.#.#.##....#.#....##..##..##
                #.##.##....#.##.#.###.#...#..#.##.####.#.#.#.#.###.###.####....#.#.#.#
                .#.#.#####.##...##.##..#..#.#..####.#..#.#.#######..#.##.#.###.#.....#
                ..#..#....###.#....###.##.#..#..#.#..#.#.#...##...#....##....#..##...#
                ###..........#..#.###....##.##...#####.###.#.##...#.##.....#.##.#.####
                #.###.####...#..#.##.....#.####.##..##...#..##.....#...###..##.######.
                .....#.####..##.#...#..##.###..#.##.####..#...#.###..##..#.#.###...#.#
                .#.#.#..##.##..#.#.##.#.##.#.##..##.##.#..##.#.##..#####.#.###.#.##..#
                ###.#.###.##.##....#.#.#...##...#.#..#.#..#.#..##.#....#####...#...###
                .#.#.#.#.#..#....###.#.##.#.#.####..#.#.#...#.#.#.###....#....#...##..
                #.#....#........#....######...#....#..#.###...#.....###..###...##..#..
                .###.##....#.#.#.###..###....#.#.#..###.##..#..#..#####.#.###.#..##..#
                ..###.##..####.....#...##.#....#...###..#.###.#...##....####........#.
                #####.##..#..##..###....#.##....#.#...##.########...#.#.#..##..##..###
                .##..#...##.....###.#...#..###.######.#.#...#...##..#.....#..#.##..#.#
                .#####..#.######.#..#..#.#.#.##....##..#.......#....#.##.#.#..##...#.#
                .#.##..#..###..#.######........##.##.##..#....#.###.######.##.#.#..##.
                ##.##.#..####.#....###.#..##..#...#.#####.#..#...#....##...#.###..#.##
                #....##..#...#.#.###.#.#...##.#.#..###...####..##.#..##.#.#####.....##
                .##.#..#.##.##.#.##.....#######..#...#.##.####...#.....#.##..#...##...
                #.#.#.#####...#####..#.##....#.#.####.#..#.##..#.#.#...#..##.#...##...
                #.#.#.#..#.#.#..#..###.#.....#.#.#..#.#####.#.#..#...#.###.###...#.#..
                .####..####.#.#..#...##.##.#....#.#.....#.##.###..#...###.###.#....##.
                ....##.#.##.###.#..##.#..#.......##...#.###...#.......#..####.#.#.####
                ....#.#......####..#.#..#..#..#.##..#..#..###..#.#.##.#.##..###..#..#.
                .##.#.....##.#..#..#..####..#.#.#...###.##.##.##...#..##..##.##...##..
                #..####..#...#.#....##...##..#.....##.#######..#.####...##..######.#..
                ..#.##.##....##.#######..##...#..#..###.....##.#.#..#.#...##..###.####
                #####......##..#.#..#......#..####.####...#####..######...##.###..##..
                ###..##.#.##....##..######.#.#.#......#..##.#.##.#.##...#.##...###..##
                .....#.#.#.##..#.#####.##.#.#.....#.#..#.###.##..#.###.##..##.###....#
                .###.####..####.###....####.#.##..##..#.....##.###.##.######.#..#.#...
                .#.#######.#.#.###....#####..#.#.#..#.#.#.#.#..##..#..#...##..##..#.#.
                .##..####..#.#...###.#...#....####...###.#..#.#.....#.#.##.#..##.#.#..
                .#.#.#.#####..##.####..#..##......#..#.###.#..#....#...#....#...#.####
                ..##.##.###.#..#..#.#..#.###......##.#..#..#.#.####.#.#.#.####.##.....
                ##.#..#..##.#######..#..#....##..#...########.##.#.#...##...##.##.....
                .#...#####.#..##.##.###.####.....###.#......########.#..##.##.#....###
                ...####.###....##..#..#....#..##.####..##..#..###.......#.#.###.##...#
                .#.#......#####...##....#.#..#######.######.#.#.##.#..###..#....##..#.
                ..###.#.#####..##.#.####....#.###..#..#.##.#####.##..##.##..##..#.##.#
                .####.#.######.###.###..#......#...#...#..#..##.###.##.#.####.#.#.##.#
                #####.###.##.#########..###..#.#.##.#..#..##...#.###.#.#......###..##.
                ###...###.##.#.###.#.##.####.#######..##.#....#####.###.#..#.#...###..
                .######...#...#..###......#.#.##........#..##.#.#.##.#....###.....##.#
                #.#.....##.##.##..##..##.#.##.###.##.###.##.#.##.###....##..#.#.##....
                #.####.##...##....#.#.....#.#.###..#..####.....#.##..##...##.###.#..##
                #####.##.#...#....#..###.##..##...#....#....##.#.#....#####....####.##
                ####...##...#.###.##.##.#####...#.....##..#####...########..####......
                #.#..##.##.#.######.###.#.##.......#......####..##.#.#.#..##.###.#..#.
                #..#..########..##..#.######..#.#...#..#.#####.###.####......##..###.#
                #..#.#...#..#....#..##.##.#..###.####.###########.#..#.###.#.##.###..#
                ##.#..#..#.....#.##.#..######..#..#...#.#...###.#.#.#.#.#.########...#
                ..###.#.##......###..#...##......#####.#.#....####.....##.#..#.#..#.#.
                ..######....#..##.#.#..#.##.#..##.##.#....##....###.#.##.##..##....###
                .#####....##....###.#.#######.....##.###.#..#.#.#..###...#.##..#..#.#.
                #..#####...#..##..#..#..#....#.##....#..##.......##..#....#.#..#.#.###
                #.#..#####...#...#...##.#....#..##.#.##....#####.....#.##.....#..#.###
                ##.#.#....#...#.####....###....#...#.##...##.#....#.#.#.##......##.###
                ...##.#.#..#.###..#.#...##.#...##.#...##...#..###.#.###...###..#..##.#
                .#####...#.#..###.#.##.##.#.##..##.#.#.....##....#.#..#.#.#..#####.###
                #.####.####..###......##.....#.#.....##.#..##.##.#....###.....####..##
                #..#####...#....#...###..##...###..####..####..#...#####.#####..#.###.
                ####.###.###....####....##..#..####...#....###.##.#.##...##.......####
                .#.###....####..#..#.###.##.##.####..##.#..###..#..#.#.#..#..#.##..##.
                ....##......####.####.######...###.....###.#.#..##.#.##.......#...#...
                ##.###.##...#.....#.##.#.......####.##.###..###.#.#..#.##..#.####....#
                ....#..##.#...##.##.#.#.#..#.#..#..#.####....#####..#.....#####.#.....""";
        cut = new Game(input);
        GameMap actual = cut.playRound(10);
        System.out.println(actual.draw());
        assertThat(actual.calcEmptyInRectangle()).isEqualTo(3966);
    }
}